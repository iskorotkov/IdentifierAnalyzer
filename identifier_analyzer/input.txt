#include<iostream>
#include<cstdlib>
#include<ctime>
#include <vector>
using namespace std;

const int NMAX = 1000000;
int tempArray[NMAX];

void Merge(int * a, int begin, int middle, int end)
{
	int left = begin;
	int right = middle + 1;
	int length = end - begin + 1;
	for (int i = 0; i < length; i++)
	{
		if (right > end || left <= middle && a[left] < a[right])
		{
			tempArray[i] = a[left];
			left++;
		}
		else
		{
			tempArray[i] = a[right];
			right++;
		}
	}
	for (int i = 0; i <length; i++)
		a[i+begin] = tempArray[i];
}

void MergeSort(int *a, int l, int r)
{
	if (l == r) return;
	int m = (l + r) / 2;
	MergeSort(a, l, m);
	MergeSort(a, m + 1, r);
	Merge(a, l, m, r);
}

int main()
{
	srand(time(NULL));
	int n(4L);
	cin >> n;
	vector<int> d(n);
	vector<int>::iterator it;
	for(int item: d)
	  cout << item << '\n';
    for (it = a.begin(); it != a.end(); it++)
		cout << *it <<'\t';
	int *a;
	a = new int[(n)/**(n)*/];
	for (int i = 0; i < n; i++)
		cin >> a[i];
///for (int i = 0; i < n; i++)
/*		cout << a[i] << ' ';
	cout << endl;
*	MergeSort(a, 0, n - 1); */
	for (int i = 0; i < n; i++)
		cout << a[i] << "a\\b";
	cout << endl;
//	a[0] = a[1]*(4L + 8LL)
	delete[]a;
}